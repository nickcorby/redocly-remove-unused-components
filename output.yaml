openapi: 3.0.2
info:
  title: Gateway
  version: v1
  description: Publicly accessible API
servers:
  - url: https://test.api
paths:
  /api/v1/cards:
    get:
      operationId: Card_GetCards
      tags:
        - Card
      summary: "Gets a list of cards of a given firm.\r\nThe result only contains cards whose version is greater than lastRowVer."
      parameters:
        - name: Authorization
          in: header
          description: Auth Token
          required: true
          schema:
            type: string
        - name: lastRowVer
          in: query
          description: The last row version of the cards to return
          schema:
            type: integer
            format: int64
            default: 0
        - name: includes
          in: query
          description: A comma-separated list of properties to include in the response.
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200Response'
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorizer: []
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: GET
        uri: https://${stageVariables.PassthroughUrl}/api/v1/cards
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.header.Access-Control-Allow-Origin: '''*'''
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.querystring.lastRowVer: method.request.querystring.lastRowVer
          integration.request.querystring.includes: method.request.querystring.includes
        passthroughBehavior: when_no_match
        type: http
    post:
      operationId: Card_CreateOrUpdateCard
      tags:
        - Card
      summary: "Creates or updates a card.\r\nImplemented as an idempotent operation."
      parameters:
        - name: Authorization
          in: header
          description: Auth Token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            content: {}
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - AuthAuthorizer: []
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: https://${stageVariables.PassthroughUrl}/api/v1/cards
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.header.Access-Control-Allow-Origin: '''*'''
          integration.request.header.Authorization: method.request.header.Authorization
        passthroughBehavior: when_no_match
        type: http
components:
  schemas:
    200Response:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    RequestBody:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
